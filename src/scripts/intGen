#!/usr/bin/env perl
sub printHelp
{
   print <<ENDHELP;
# PROGRAM:  symbolicGaussIntg
# PURPOSE:  This program will take the formalism presented in the paper by J.C
#           Browne and R.D. Poshusta (Browne JC, Poshusta RD.,
#           "Quantum-Mechanical Integrals over Gaussian Atomic Orbitals.", The
#           Journal of Chemical Physics., Vol. 36, Iss. 7, P. 19337, (1962)).
#           and produce a set of formulas that can be used in a Fortran 90
#           program to analytically evaluate them.
#           The major modifications to the formalism are that:
#           (1)  Only one exponential "alpha" coefficient is used instead of
#                the three (one for each Cartesian direction) that are used in
#                the paper.
#           (2)  A three center integral is also computed between all possible
#                comvinations of s, p, d, f type orbitals.
#
# USAGE:  symbolicGaussIntg [-help]
#
# The -help option will print this useful message.
#
#
ENDHELP
exit;
}

###################################################################
# Use necesary modules.
###################################################################
use strict;
use warnings;
use Env;

###################################################################
# Define gloval variables.
###################################################################

# Define file names.
my $codeFile;
my @eTriad;  # Index1=QN_lm; Index2=[1..3];

###################################################################
# Beginning of Program
###################################################################

# Initialize the environment of the program including setting defaults.
&initEnv;

# Parse the command line.
&parseCommandLine;

#subroutine that prints the header for the final Fortran program.
&makeHeader;

# Compute the two center overlap formulas.
&twoCentOverlap;

&makeTail;

#subroutine that prints genMatrix2 subroutine declaration
&makeHeader2;

#compute the overlap Matrix
&computeOverlapMatrix;

&makeTail2;

###################################################################
# End of Program.
###################################################################

###################################################################
# Define all the subroutines.
###################################################################

sub initEnv
{
   # Assume the name for the code file to be produced.
   $codeFile = "codeFile";

   # Initialize possible values for the eTriad.
   @{$eTriad[1]}  = qw(0 0 0); # s
   @{$eTriad[2]}  = qw(1 0 0); # x
   @{$eTriad[3]}  = qw(0 1 0); # y
   @{$eTriad[4]}  = qw(0 0 1); # z
   @{$eTriad[5]}  = qw(2 0 0); # xx
   @{$eTriad[6]}  = qw(0 2 0); # yy
   @{$eTriad[7]}  = qw(0 0 2); # zz
   @{$eTriad[8]}  = qw(1 1 0); # xy
   @{$eTriad[9]}  = qw(1 0 1); # xz
   @{$eTriad[10]} = qw(0 1 1); # yz
   @{$eTriad[11]} = qw(1 1 1); # xyz
   @{$eTriad[12]} = qw(2 1 0); # xxy
   @{$eTriad[13]} = qw(2 0 1); # xxz
   @{$eTriad[14]} = qw(1 2 0); # yyx
   @{$eTriad[15]} = qw(0 2 1); # yyz
   @{$eTriad[16]} = qw(1 0 2); # zzx
   @{$eTriad[17]} = qw(0 1 2); # zzy
   @{$eTriad[18]} = qw(3 0 0); # xxx
   @{$eTriad[19]} = qw(0 3 0); # yyy
   @{$eTriad[20]} = qw(0 0 3); # zzz

}


sub parseCommandLine
{
   # Define local variables.
   my $number=0;
   my $argument;
   my $commandLine = "command";

   while ($number < scalar(@ARGV))
   {
      if ($ARGV[$number] eq "-help")
         {&printHelp;}
      else
         {die "Unknown command line parameter.  $ARGV[$number]  Aborting\n";}

      $number++;
   }

   # Record the command line used to run this program.
   open (COMMANDLINE,">>$commandLine");
   print COMMANDLINE "symbolicGaussIntg ";
   foreach $argument (0..$#ARGV)
      {print COMMANDLINE "$ARGV[$argument] ";}
   print COMMANDLINE "\n";
   close (COMMANDLINE);
}


sub twoCentOverlap
{
   # Define local variables.
   my $orb1;
   my $orb2;
   my $alpha = "a";
   my @cartXYZ = qw(x y z);
   my @coeffAXYZ = qw(Ax Ay Az);
   my @eTriad1;
   my @eTriad2;
   my @overlap;
   my $xyzAxis;
   my $index;
   my $indexMax;
   my $fCoeff;
   my $endCoeff;
   my $d2;
   my $d1;
   my $d2PreFact ="((a2/(a1+a2))*";
   my $d1PreFact ="((a1/(a1+a2))*";

   # Open the file that is to contain the integrals.
   open (INTG,">>$codeFile") || die "Cannot open $codeFile for writing.\n";

   print INTG "d1x = pos1(1) - pos2(1)\n";
   print INTG "d1y = pos1(2) - pos2(2)\n";
   print INTG "d1z = pos1(3) - pos2(3)\n";
   print INTG "d2x = pos2(1) - pos1(1)\n";
   print INTG "d2y = pos2(2) - pos1(2)\n";
   print INTG "d2z = pos2(3) - pos1(3)\n\n";

   # Loop over all possible combinations of orbital types for two orbitals.
   print INTG "if (l1l2Switch.eq.34) then\n";

   foreach $orb1 (1..4)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..4)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.17) then\n";

   foreach $orb1 (1..1)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..1)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.33) then\n";

   foreach $orb1 (1..1)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..4)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.65) then\n";

   foreach $orb1 (1..1)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..10)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }  
   
   print INTG "else if (l1l2Switch.eq.129) then\n";

   foreach $orb1 (1..1)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..20)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.18) then\n";

   foreach $orb1 (1..4)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..1)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.66) then\n";

   foreach $orb1 (1..4)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..10)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.130) then\n";

   foreach $orb1 (1..4)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..20)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.20) then\n";

   foreach $orb1 (1..10)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..1)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.36) then\n";

   foreach $orb1 (1..10)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..4)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.68) then\n";

   foreach $orb1 (1..10)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..10)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.132) then\n";

   foreach $orb1 (1..10)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..20)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.24) then\n";

   foreach $orb1 (1..20)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..1)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.40) then\n";

   foreach $orb1 (1..20)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..4)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else if (l1l2Switch.eq.72) then\n";

   foreach $orb1 (1..20)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..10)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }

   print INTG "else\n";

   foreach $orb1 (1..20)
   {
      @eTriad1[1..3] = @{$eTriad[$orb1]};

      foreach $orb2 (1..20)
      {
         print INTG "! Begin $orb1 $orb2\n";

         @eTriad2[1..3] = @{$eTriad[$orb2]};

         $overlap[$orb1][$orb2] = "orbitalCombo($orb1,$orb2) = ((pi/(a1+a2))**1.5d0) * exp((-(a1*a2)/(a1+a2))*" .
            "sum((pos1(:) - pos2(:))**2.0d0)) * ( &\n";

         foreach $xyzAxis (1..3)
         {
            if (($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis])%2 == 0)
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis] + $eTriad2[$xyzAxis]);}
            else
               {$indexMax = 0.5 * ($eTriad1[$xyzAxis]+$eTriad2[$xyzAxis] - 1);}

            foreach $index (0..$indexMax)
            {
                $d2="d2".$cartXYZ[$xyzAxis-1];
                $d2=$d2PreFact.$d2.")";
                $d1="d1".$cartXYZ[$xyzAxis-1];
                $d1=$d1PreFact.$d1.")";

                $fCoeff = &getfCoeff((2*$index),$eTriad1[$xyzAxis],
                      $eTriad2[$xyzAxis],$d2,$d1);
                $endCoeff = "(". &dFact($index).".d0)"."/(2.0d0**$index".".d0".")*(" .
                      "(1.0d0/(a1+a2))**" ."("."$index".".d0))";
                if ($index == 0)
                   {$overlap[$orb1][$orb2] .= "((($fCoeff) * ($endCoeff))";}
                else
                   {$overlap[$orb1][$orb2] .= "(($fCoeff) * ($endCoeff))";}
                if ($index != $indexMax)
                   {$overlap[$orb1][$orb2] .= "+ &\n";}
                else
                   {$overlap[$orb1][$orb2] .= ")";}
            }
            if ($xyzAxis != 3)
               {$overlap[$orb1][$orb2] .= "* &\n";}
            else
               {$overlap[$orb1][$orb2] .= ")";}  
         }

         print INTG "$overlap[$orb1][$orb2]\n\n";
      }
   }
   print INTG "end if\n";
}

sub getfCoeff
{
   # Define passed parameters.
   my $t = $_[0];
   my $m = $_[1];
   my $n = $_[2];
   my $a = $_[3];
   my $b = $_[4];

   # Define local variables.
   my $s;
   my $ms;
   my $nts;
   my $fCoeffTerm;
   my $choosems;
   my $choosents;

   $fCoeffTerm = "";

   foreach $s (0..$t)
   {
      $ms = $m - $s;

      #These two conditions prevent
      #division by zero.

      if ($ms < 0)
         {$ms = 0;}

      $nts = $n - $t + $s;

      if ($nts < 0)
         {$nts = 0;}

      $choosems = &choose($m,$s);
      $choosents = &choose($n,($t-$s));
      $ms .= ".d0";
      $nts .= ".d0";
      $fCoeffTerm .= "($choosems.d0 * $choosents.d0 * ($a ** ($ms)) * ($b ** ($nts)))";
      if ($s != $t)
         {$fCoeffTerm .= "+ &\n";}
      else
         {$fCoeffTerm .= " &\n";}

   }

   return $fCoeffTerm;
}

sub choose
{
   # Define passed parameters.
   my $n = $_[0];
   my $k = $_[1];

   # Define local variables.
   my $l;
   my $returnValue;

   $returnValue = 1;

   foreach $l (1..$k)
      {$returnValue *= ($n-$l+1)/$l;}

   return $returnValue;
}

sub dFact
{
   # Define passed parameters.
   my $inputNumber = $_[0];

   # Define local variables.
   my $i;
   my $product;
   my $returnValue;

   $returnValue = 1;

   if ($inputNumber == 0)
      {return $returnValue;}
   else
   {
      for ($i=1;$i<=($inputNumber);$i++)
         {$returnValue *= (2*$i)-1;}
   }

   return $returnValue;
}

sub computeOverlapMatrix

{
  my @coefs;
  my @preOvlap;
  my $i;
  my $j;
  my $extent1;
  my $extent2;
  my $m;
  my $n;
  my $totCoef;
  my $string;
  my $dString;
  my $codeFile="codeFile";
  
  $coefs[1][1]  =  1;
  $coefs[2][1]  =  1;
  $coefs[3][1]  =  1;
  $coefs[4][1]  =  1;
  $coefs[5][1]  =  1;
  $coefs[6][1]  =  1;
  $coefs[7][1]  =  1;
  $coefs[8][1]  =  1;
  $coefs[8][2]  = -1;
  $coefs[9][1]  =  2;
  $coefs[9][2]  = -1;
  $coefs[9][3]  = -1;
  $coefs[10][1] =  1;
  $coefs[11][1] =  1;
  $coefs[11][2] = -1;
  $coefs[12][1] =  1;
  $coefs[12][2] = -3;
  $coefs[13][1] =  3;
  $coefs[13][2] = -1;
  $coefs[14][1] =  2;
  $coefs[14][2] = -3;
  $coefs[14][3] = -3;
  $coefs[15][1] =  4;
  $coefs[15][2] = -1;
  $coefs[15][3] = -1;
  $coefs[16][1] =  4;
  $coefs[16][2] = -1;
  $coefs[16][3] = -1;
  
  
  $preOvlap[1][1]  =  1;
  $preOvlap[2][1]  =  2;
  $preOvlap[3][1]  =  3;
  $preOvlap[4][1]  =  4;
  $preOvlap[5][1]  =  8;
  $preOvlap[6][1]  =  9;
  $preOvlap[7][1]  = 10;
  $preOvlap[8][1]  =  5;
  $preOvlap[8][2]  =  6;
  $preOvlap[9][1]  =  7;
  $preOvlap[9][2]  =  5;
  $preOvlap[9][3]  =  6;
  $preOvlap[10][1] = 11;
  $preOvlap[11][1] = 13;
  $preOvlap[11][2] = 15;
  $preOvlap[12][1] = 18;
  $preOvlap[12][2] = 14;
  $preOvlap[13][1] = 12;
  $preOvlap[13][2] = 19;
  $preOvlap[14][1] = 20;
  $preOvlap[14][2] = 13;
  $preOvlap[14][3] = 15;
  $preOvlap[15][1] = 16;
  $preOvlap[15][2] = 18;
  $preOvlap[15][3] = 14;
  $preOvlap[16][1] = 17;
  $preOvlap[16][2] = 12;
  $preOvlap[16][3] = 19;
  
  open(INTG,">>$codeFile") or die "cannot open $codeFile for writing.\n";
  
  print INTG "if (l1l2Switch.eq.34) then\n";
  foreach $i (1..4)
  {
    foreach $j (1..4)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.17) then\n"; 
  foreach $i (1..1)
  {
    foreach $j (1..1)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.33) then\n"; 
  foreach $i (1..1)
  {
    foreach $j (1..4)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.65) then\n"; 
  foreach $i (1..1)
  {
    foreach $j (1..9)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.129) then\n"; 
  foreach $i (1..1)
  {
    foreach $j (1..16)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.18) then\n"; 
  foreach $i (1..4)
  {
    foreach $j (1..1)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.66) then\n"; 
  foreach $i (1..4)
  {
    foreach $j (1..9)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.130) then\n"; 
  foreach $i (1..4)
  {
    foreach $j (1..16)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.20) then\n"; 
  foreach $i (1..9)
  {
    foreach $j (1..1)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.36) then\n"; 
  foreach $i (1..9)
  {
    foreach $j (1..4)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.68) then\n"; 
  foreach $i (1..9)
  {
    foreach $j (1..9)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.132) then\n"; 
  foreach $i (1..9)
  {
    foreach $j (1..16)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.24) then\n"; 
  foreach $i (1..16)
  {
    foreach $j (1..1)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.17) then\n"; 
  foreach $i (1..16)
  {
    foreach $j (1..4)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else if (l1l2Switch.eq.72) then\n"; 
  foreach $i (1..16)
  {
    foreach $j (1..9)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "else\n\n";
 
  foreach $i (1..16)
  {
    foreach $j (1..16)
    {
      $string = "overlapMatrix($i,$j)=";
      $dString = "overlapMatrix($i,$j)=";
      $extent1 = @{$coefs[$i]}-1;
      $extent2 = @{$coefs[$j]}-1;
      foreach $m (1..$extent1)
      {
        foreach $n (1..$extent2)
        {
          $totCoef = $coefs[$i][$m] * $coefs[$j][$n];
          if ($totCoef == -1)
          {
            $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "-orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          elsif($totCoef == 1)
          {
            $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            if (length($dString) > 75)
            {
              $string .= "&";
              print INTG "$string\n";
              $string = "";
              $dString = "";
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
            else
            {
              $string .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              $dString .= "+orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
            }
          }
          else
          {
            if ($totCoef > 0)
            {
              $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "+$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
            else
            {
              $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              if (length($dString) > 75)
              {
                $string .= "&";
                print INTG "$string\n";
                $string = "";
                $dString = "";
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
              else
              {
                $string .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
                $dString .= "$totCoef*orbitalCombo($preOvlap[$i][$m],$preOvlap[$j][$n])";
              }
            }
          }
        }
      }
      print INTG "$string\n\n";
    } 
  }

  print INTG "end if\n"; 
}

sub makeHeader

{
   my $codeFile = "codeFile";
   open(INTG,">$codeFile") || die "Could not open $codeFile for writing.\n";
   print INTG "subroutine ovlpf(a1,a2,pos1,pos2,overlapMatrix,l1l2Switch)
use O_Kinds
use O_Constants

implicit none

! Define passed variables.

real (kind=double), intent(in) :: a1, a2
real (kind=double), dimension(3), intent(in) :: pos1, pos2
real (kind=double), dimension(20,20), intent(inout) :: orbitalCombo
integer, intent(in) :: l1l2Switch

! Define local variables.

real (kind=double) :: d1x, d2x, d1y, d2y, d1z, d2z\n\n\n";
	
}

sub makeTail
{
  print INTG "end subroutine ovlpf\n\n\n";
}

sub makeTail2
{
  print INTG "end subroutine genMatrix2\n";
}

sub makeHeader2
{
   my $codeFile = "codeFile";
   open(INTG,">>$codeFile") || die "Could not open $codeFile for writing.\n";
   print INTG "subroutine genMatrix2(orbitalCombo,overlapMatrix,l1l2Switch)
use O_Kinds
use O_Constants

implicit none

! Define passed variables.

real (kind=double), dimension(16,16), intent(inout) :: overlapMatrix
real (kind=double), dimension(20,20), intent(in) :: orbitalCombo
integer, intent(in) :: l1l2Switch\n\n\n";

}

